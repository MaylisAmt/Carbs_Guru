# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    image: postgres
    container_name: data-postgres
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - ./.env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8888:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  server:
    build:
      context: ./server
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./server
          target: /src/server
          ignore:
            - node_modules/
        - action: rebuild
          path: ./server/package.json
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      NODE_ENV: production
    ports:
      - 3000:3000
  
  client:
    build:
      context: ./client
    command: npm start
    volumes:
      - ./client:/app
    develop:
      watch:
        - action: sync
          path: ./client
          target: /src/client
          ignore:
            - node_modules/
        - action: rebuild
          path: ./client/package.json
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
    ports:
      - 8000:8000

volumes:
  postgres_data:
  pgadmin-data:
  db-data:
